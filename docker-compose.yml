services:
  db:
    image: mcr.microsoft.com/mssql/server:2025-latest
    hostname: db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Password123$"
      MSSQL_PID: "Developer"
      MSSQL_AGENT_ENABLED: "true"
    ports:
      - "1443:1433"
    volumes:
      - sql_data:/var/opt/mssql
      - ./tools/db-deploy:/sql-scripts
    networks:
      - sqlserver_network
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools18/bin/sqlcmd",
          "-S",
          "localhost",
          "-U",
          "sa",
          "-P",
          "Password123$",
          "-Q",
          "SELECT 1",
          "-C",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  db-replica:
    image: mcr.microsoft.com/mssql/server:2025-latest
    hostname: db-replica
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Password123$"
      MSSQL_PID: "Developer"
      MSSQL_AGENT_ENABLED: "true"
    ports:
      - "1453:1433"
    volumes:
      - sql_replica_data:/var/opt/mssql
      - ./tools/db-deploy:/sql-scripts
    networks:
      - sqlserver_network
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools18/bin/sqlcmd",
          "-S",
          "localhost",
          "-U",
          "sa",
          "-P",
          "Password123$",
          "-Q",
          "SELECT 1",
          "-C",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: ReadYourWritesConsistency.API/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-replica:
        condition: service_healthy
    environment:
      - ConnectionStrings__ReadWrite=Server=db;Database=ReadYourWritesConsistency;User Id=sa;Password=Password123$;TrustServerCertificate=True;
      - ConnectionStrings__Read=Server=db-replica;Database=ReadYourWritesConsistency;User Id=sa;Password=Password123$;TrustServerCertificate=True;
    networks:
      - sqlserver_network

  web:
    build:
      context: .
      dockerfile: ReadYourWritesConsistency.Web/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - sqlserver_network

  db-deploy:
    build:
      context: .
      dockerfile: tools/db-deploy/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-replica:
        condition: service_healthy
    environment:
      SA_PASSWORD: "Password123$"
    networks:
      - sqlserver_network

volumes:
  sql_data:
  sql_replica_data:

networks:
  sqlserver_network:
    driver: bridge